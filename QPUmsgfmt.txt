[QPU Message Format]

QPU Message Format is flexible and polymorphic.
You can build formats by writing data of a certain type
and then increasing the reference counter by the number of bytes written.

The following is the format used by the hello_fft sample:

Header Base:
    Mailbox,
    Handle, Size, Message(*), Code, Uniform Array x QPU's,
    Peripheral Size, Peripheral Pointer
Header Extension:
    Complex Number Inputs, Complex Number Outputs,
    X-parameter, Y-parameter, Step/Stride * Jobs
Shader Code:
    Hand-programmed Hex Bytes
Twiddles:
    C-generated Data Bytes
Uniforms:
    For each QPU:
        Twiddles, Size of Twiddles and Complex Numbers, QPU Number,
        For each QPU Job:
            Job Data, Job Size * Job Number,
            Job Data, Job Size * Job Number, Job Size * Total Jobs
        End Mark,
        IRQ Interrupt Enable (Mailbox Master Mode Only)
Mailbox Specific:
    For each QPU:
        Uniform Array x QPU's, Shader Code

(*) - Message is either 0 for Direct Mode
      or a pointer to VC4 shared memory in Mailbox Mode

Note: If the reference counter is not incremented, this can cause the data
      to be misaligned, incorrectly formatted and processed incompletely.
      (A case of this has been spotted in Mailbox Mode which is why
       Direct Mode may be more functional at time of writing.)

04:10 18/05/2021